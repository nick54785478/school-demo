CREATE TABLE STUDENT (
    UUID CHAR(36) NOT NULL PRIMARY KEY,
    NUMBER BIGINT  NOT NULL,
    NAME NVARCHAR(100) NOT NULL,
    GRADE NVARCHAR(100) NOT NULL,
    STUDENT_CLASS NVARCHAR(100) NOT NULL,
    CREATED_DATE DATETIME,
    GRADUATED_DATE DATETIME,
    ACTIVE_FLAG CHAR(2)
);

CREATE TABLE OPTION_SETTING(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    TYPE NVARCHAR(100)  NOT NULL,
    VALUE NVARCHAR(60) NOT NULL,
    DEPENDENCY NVARCHAR(100),
    PARENT NVARCHAR(100),
    DESCRIPTION TEXT,
    ACTIVE_FLAG CHAR(2)
);

CREATE TABLE TEACHER (
    UUID CHAR(36) NOT NULL PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL,
    SUBJECT NVARCHAR(100) NOT NULL,
    IS_MENTOR CHAR(2),
    LEAD_CLASS VARCHAR(40)
);

CREATE TABLE COURSE (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	TEACHER_ID CHAR(36) NOT NULL,
	NAME NVARCHAR(60) NOT NULL,
	STU_CLASS VARCHAR(60) NOT NULL,
	LESSON VARCHAR(40) NOT NULL,
	TIME TIME NOT NULL,
	CONSTRAINT FK_TEACHER_COURSE FOREIGN KEY (TEACHER_ID) REFERENCES TEACHER(UUID)
)

CREATE TABLE EXAM (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    STUDENT_ID CHAR(36) NOT NULL,
    STU_CLASS VARCHAR(60) NOT NULL,
    SUBJECT VARCHAR(60) NOT NULL,
    SCORE DECIMAL(19, 2) NOT NULL,
    TYPE VARCHAR(60),
    EXAM_DATE VARCHAR(60),
    INVIGILATOR_ID CHAR(36) NOT NULL
);

CREATE TABLE DATA_MAPPING (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    MAPPING VARCHAR(40) NOT NULL,
    `TYPE` VARCHAR(40) NOT NULL,
    FIELD VARCHAR(60) NOT NULL,
    `VALUE` VARCHAR(60) NOT NULL,
    DESCRIPTION TEXT,
    PRIORITY_NO INT,
    ACTIVE_FLAG VARCHAR(2)
);

CREATE TABLE REPORT_SETTING (
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    `TYPE` VARCHAR(40) NOT NULL,
    OBJECT_ID VARCHAR(100) NOT NULL,
    FILE_NAME VARCHAR(60) NOT NULL,
    DESCRIPTION TEXT,
);

CREATE VIEW STUDENT_EXAM_V AS
select
    `e`.`ID` AS `ID`,
    concat(
        `e`.`STU_CLASS`,
        '-',
        convert(`s`.`NAME` using utf8mb4)
    ) AS `FULL_NAME`,
    `s`.`UUID` AS `STUDENT_ID`,
    `s`.`NAME` AS `NAME`,
    `s`.`NUMBER` AS `NUMBER`,
    `e`.`STU_CLASS` AS `STU_CLASS`,
    `e`.`SUBJECT` AS `SUBJECT`,
    `e`.`SCORE` AS `SCORE`,
    `e`.`TYPE` AS `TYPE`,
    `e`.`EXAM_DATE` AS `EXAM_DATE`,(
        select
            `school`.`teacher`.`NAME`
        from
            `school`.`teacher`
        where
            (`school`.`teacher`.`UUID` = `e`.`INVIGILATOR_ID`)
    ) AS `INVIGILATOR`
from
    (
        `school`.`student` `s`
        join `school`.`exam` `e` on((`s`.`UUID` = `e`.`STUDENT_ID`))
    )